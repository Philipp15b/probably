Search.setIndex({"docnames": ["cfg_internals", "index", "pgcl", "pgcl_grammar", "pysmt", "substitute_internals", "util"], "filenames": ["cfg_internals.rst", "index.rst", "pgcl.rst", "pgcl_grammar.rst", "pysmt.rst", "substitute_internals.rst", "util.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">probably.pgcl.cfg</span></code> Internals", "Probably Documentation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">probably.pgcl</span></code>", "pGCL Grammar", "<code class=\"docutils literal notranslate\"><span class=\"pre\">probably.pysmt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">probably.pgcl.substitute</span></code> Internals", "<code class=\"docutils literal notranslate\"><span class=\"pre\">probably.util</span></code>"], "terms": {"class": [0, 2, 4, 5, 6], "_region": [0, 2], "dominator_id": 0, "instr": [0, 2], "successor_id": 0, "sourc": [0, 2, 3, 4, 5, 6], "A": [0, 2, 6], "region": [0, 2], "i": [0, 1, 2, 4, 5, 6], "like": [0, 2, 3, 4], "basic": [0, 2], "block": [0, 2, 3], "contain": [0, 2, 4, 6], "gener": [0, 1, 2, 6], "program": [0, 1, 4], "statement": [0, 1, 2], "instead": [0, 2], "onli": [0, 2, 3, 6], "assign": [0, 1, 2, 3, 5], "ha": [0, 2], "paramet": [0, 2, 4, 5, 6], "option": [0, 1, 2, 4, 5], "newtyp": [0, 2], "basicblockid": [0, 2], "int": [0, 2, 3, 4, 6], "list": [0, 2, 5, 6], "union": [0, 2, 4, 5, 6], "skipinstr": [0, 2], "whileinstr": [0, 2], "ifinstr": [0, 2], "asgninstr": [0, 2], "choiceinstr": [0, 2], "loopinstr": [0, 2], "tickinstr": [0, 2], "observeinstr": [0, 2], "probabilityqueryinstr": [0, 2], "expectationinstr": [0, 2], "plotinstr": [0, 2], "printinstr": [0, 2], "optimizationqueri": [0, 2], "static": [0, 1, 2, 4, 6], "initi": [0, 2], "initial_block_id": 0, "return": [0, 2, 4, 5, 6], "type": [0, 1, 4, 5, 6], "child": 0, "parent_id": 0, "block_id": 0, "dominates_successor": 0, "frontier": [0, 2], "dict": [0, 2, 4, 5, 6], "bool": [0, 2, 3, 4, 5], "add_block": 0, "basicblock": [0, 2], "_expand_region": 0, "graph": [0, 1], "see": [0, 2, 5, 6], "reduce_cfg_to_instr": [0, 2], "given": [0, 1, 2, 4, 5], "control": [0, 1], "flow": [0, 1], "domin": [0, 2], "id": [0, 2], "creat": [0, 2, 4, 5, 6], "e": [0, 2], "instruct": [0, 1, 3], "where": [0, 2], "each": [0, 2, 5, 6], "next": [0, 2], "all": [0, 2, 4, 5], "eventu": [0, 2], "end": [0, 2], "up": [0, 2, 6], "second": [0, 2], "item": 0, "successor": [0, 2], "": [0, 2, 4], "controlflowgraph": [0, 2], "_join_region": [0, 2], "region1": 0, "region2": 0, "For": [0, 1, 2], "both": [0, 2], "branch": [0, 1, 2, 5], "must": [0, 2], "continu": [0, 2], "same": [0, 2], "let": [0, 2], "call": [0, 2, 3], "thi": [0, 2, 3, 5, 6], "join": 0, "point": [0, 2, 5], "us": [0, 1, 2, 4, 5, 6], "from_instruct": [0, 2], "case": [0, 2], "howev": [0, 2], "modifi": [0, 2], "one_big_loop": [0, 2], "do": [0, 1, 2, 6], "necessarili": [0, 2], "have": [0, 1, 2, 4], "proper": [0, 2], "an": [0, 2, 6], "exampl": [0, 2], "can": [0, 1, 2, 4], "seen": 0, "document": [0, 2, 3], "we": [0, 2], "handl": [0, 2, 4, 5], "those": [0, 2, 5], "here": [0, 2, 4], "explicitli": 0, "duplic": [0, 2], "trampolin": [0, 2], "python": [1, 2], "packag": 1, "pars": [1, 2], "check": 1, "analyz": [1, 2], "probabilist": [1, 2], "written": [1, 2], "pgcl": [1, 4], "languag": [1, 2], "more": [1, 2, 5], "inform": [1, 2, 5], "visit": [1, 2], "http": [1, 2], "github": [1, 2], "com": 1, "philipp15b": 1, "featur": 1, "support": [1, 2, 4], "constant": [1, 2], "variabl": [1, 4, 5], "boolean": [1, 2], "bound": [1, 2, 3, 5], "natur": [1, 2], "number": [1, 2], "float": [1, 3], "liter": [1, 2, 3], "unari": [1, 2], "binari": [1, 2], "oper": [1, 2, 6], "while": [1, 2, 3, 6], "loop": [1, 3], "condit": [1, 2], "choic": [1, 2, 3], "weakest": 1, "pre": 1, "expect": [1, 3], "calcul": [1, 2], "free": 1, "linear": 1, "translat": [1, 2], "from": [1, 2, 4, 6], "summat": [1, 2], "normal": [1, 2], "form": [1, 2], "ast": [1, 6], "travers": [1, 2], "modif": 1, "iter": [1, 2, 6], "over": [1, 2], "mutabl": [1, 2], "refer": [1, 2], "algorithm": [1, 2, 6], "substitut": [1, 4], "express": [1, 3, 5], "master": 1, "commit": 1, "d092b2b": 1, "lint": 1, "add": [1, 2, 5], "except": [1, 2], "newer": 1, "version": [1, 2], "philipp": 1, "schro": 1, "er": 1, "2024": 1, "03": 1, "14": 1, "21": 1, "00": 1, "17": [1, 2], "you": [1, 2, 4], "want": [1, 2], "quickstart": 1, "jump": [1, 2], "modul": [1, 2, 5, 6], "compil": 1, "frontend": 1, "declar": [1, 3, 4], "superclass": 1, "transform": [1, 6], "shape": 1, "One": 1, "big": 1, "parser": [1, 3, 4], "walk": [1, 5, 6], "simplif": 1, "pysmt": 1, "context": [1, 2], "util": [1, 2, 4], "lark": [1, 2, 3], "also": [1, 2], "offer": 1, "simpl": [1, 2, 6], "quick": 1, "inspect": 1, "If": [1, 2, 4, 6], "poetri": 1, "instal": 1, "global": 1, "run": [1, 2], "input": [1, 2], "print": [1, 2, 3, 6], "some": [1, 2, 4], "about": [1, 2], "argument": 1, "requir": [1, 2, 4], "implement": 2, "The": [2, 3, 4, 5, 6], "most": 2, "import": [2, 3, 4], "ar": [2, 4, 5], "two": [2, 5], "below": 2, "function": [2, 3, 4], "onc": 2, "abstract": 2, "syntax": 2, "tree": 2, "its": 2, "defin": 2, "It": [2, 5], "possibl": 2, "wp": 2, "specif": 2, "compile_pgcl": 2, "code": [2, 3], "comment": 2, "start": [2, 3, 6], "everi": 2, "either": [2, 6], "nat": [2, 3], "f": 2, "c": 2, "provid": 2, "look": 2, "follow": 2, "0": [2, 6], "100": 2, "logic": 2, "negat": 2, "preced": [2, 6], "compar": 2, "arithmet": [2, 4], "skip": [2, 3], "10": 2, "unif": [2, 3], "1": [2, 5, 6], "8": 2, "true": [2, 3, 4, 5], "booltyp": 2, "nattyp": 2, "none": [2, 4, 5, 6], "cond": 2, "binopexpr": [2, 4, 5], "binop": 2, "AND": 2, "lh": 2, "lt": 2, "varexpr": [2, 4, 5], "rh": 2, "natlitexpr": [2, 4, 5], "bodi": 2, "prob": 2, "reallitexpr": [2, 4, 5], "duniformexpr": [2, 4, 5], "boollitexpr": [2, 4, 5], "detail": [2, 4], "what": 2, "accept": 2, "view": 2, "formal": 2, "grammar": [2, 6], "api": 2, "combin": 2, "just": 2, "thin": 2, "wrapper": 2, "around": 2, "checker": 2, "respect": 2, "substituion": 2, "them": 2, "live": 2, "substitute_const": 2, "x": [2, 4, 5], "y": 2, "checkfail": 2, "locat": [2, 6], "messag": 2, "str": [2, 4, 5, 6], "whether": 2, "done": 2, "default": 2, "compile_expr": 2, "unopexpr": [2, 4, 5], "categoricalexpr": [2, 4, 5], "substexpr": [2, 4, 5], "tickexpr": [2, 4, 5], "cuniformexpr": [2, 4, 5], "bernoulliexpr": [2, 4, 5], "geometricexpr": [2, 4, 5], "poissonexpr": [2, 4, 5], "logdistexpr": [2, 4, 5], "binomialexpr": [2, 4, 5], "iidsampleexpr": [2, 4, 5], "compile_expect": 2, "data": [2, 5, 6], "repres": [2, 6], "our": 2, "sum": 2, "g": 2, "typeclass": 2, "prefer": 2, "allow": [2, 4], "exhaust": 2, "mypi": 2, "In": [2, 5], "rare": 2, "necessari": 2, "tell": 2, "object": 2, "actual": 2, "cast": 2, "method": 2, "instrclass": 2, "go": 2, "note": [2, 4], "isinst": 2, "against": 2, "becaus": 2, "doe": 2, "yet": 2, "work": 2, "bunch": 2, "decl": 2, "var": [2, 3, 5], "expr": [2, 4, 5], "__str__": 2, "convert": [2, 4], "correspond": 2, "parse_pgcl": 2, "2": [2, 6], "typealiasforwardref": 2, "origin": 2, "valid": 2, "well": 2, "name": [2, 6], "from_pars": 2, "output": 2, "vardecl": 2, "constdecl": 2, "parameterdecl": 2, "add_vari": 2, "typ": 2, "new": [2, 4, 5, 6], "rais": 2, "assertionerror": 2, "alreadi": [2, 6], "realtyp": 2, "to_skeleton": 2, "shallow": 2, "copi": [2, 5], "without": 2, "ani": 2, "alia": [2, 6], "preserv": [2, 6], "valu": [2, 4, 5, 6], "consid": 2, "unbound": 2, "until": 2, "thei": [2, 4], "That": 2, "sai": 2, "lost": 2, "parse_expr": [2, 4], "get_typ": 2, "5": 2, "lower": 2, "upper": 2, "therefor": 2, "real": [2, 3, 4], "differ": 2, "thing": 2, "lump": 2, "togeth": 2, "state": 2, "sigma": 2, "consist": 2, "text": 2, "first": [2, 5], "comput": 2, "later": 2, "itself": [2, 5, 6], "There": 2, "monad": 2, "uniformexpr": 2, "map": [2, 4, 5, 6], "distribut": 2, "dist": 2, "And": 2, "mathbb": 2, "r": 2, "distrexpr": 2, "decim": 2, "fraction": 2, "infin": [2, 3, 4], "represent": 2, "exact": 2, "under": 2, "fine": 2, "pleas": 2, "to_fract": 2, "infinit": 2, "is_infinit": 2, "throw": 2, "unop": 2, "qualnam": [2, 6], "boundari": [2, 6], "neg": [2, 3, 6], "iverson": [2, 3], "OR": 2, "leq": [2, 3], "3": [2, 6], "4": [2, 4], "gt": 2, "geq": [2, 3], "6": 2, "eq": [2, 3], "7": 2, "plu": [2, 3, 6], "minu": [2, 3, 6], "9": [2, 6], "time": [2, 3], "power": [2, 3], "11": 2, "divid": [2, 3], "12": 2, "modulo": 2, "13": [2, 4], "is_associ": 2, "associ": [2, 5], "reduc": 2, "build": 2, "functool": 2, "empti": 2, "sequenc": 2, "flatten": 2, "recurs": 2, "operand": 2, "realli": 2, "make": [2, 5], "sens": 2, "error": 2, "choos": 2, "random": 2, "integ": [2, 4], "within": 2, "inclus": 2, "interv": 2, "As": 2, "uniform": 2, "right": [2, 5, 6], "hand": [2, 5, 6], "side": [2, 5], "somewher": 2, "nest": 2, "along": 2, "probabilit": 2, "equal": 2, "frac": 2, "tupl": [2, 6], "param": 2, "bernoulli": [2, 3], "geometr": [2, 3], "poisson": [2, 3], "logarithm": 2, "n": 2, "p": 2, "sampling_dist": 2, "independ": 2, "sampl": 2, "ident": 2, "assum": 2, "encod": 2, "pgf": 2, "one": 2, "evalu": 2, "alwai": 2, "exactli": 2, "pair": [2, 6], "categor": 2, "subst": [2, 5], "substit": 2, "appli": [2, 5, 6], "target": 2, "invari": 2, "thu": 2, "befor": 2, "avail": 2, "preexpect": 2, "semant": 2, "is_zero": 2, "zero": 2, "tick": [2, 3], "queri": [2, 3], "noth": 2, "fals": [2, 3, 4, 5], "left": [2, 6], "amount": 2, "increas": 2, "runtim": 2, "current": [2, 5], "Its": 2, "updat": 2, "accord": 2, "observ": [2, 3], "forward": 2, "analysi": 2, "mai": [2, 4], "result": 2, "insid": 2, "optimizationtyp": 2, "maxim": 2, "minim": 2, "var_1": 2, "var_2": 2, "term_count": 2, "These": 2, "otherwis": [2, 6], "declclass": 2, "exprclass": 2, "human": 2, "readabl": 2, "string": 2, "sometim": 2, "satisfi": 2, "node": 2, "re": 2, "read": [2, 6], "kam19": 2, "loopfree_wp": 2, "one_loop_wp": 2, "general_wp": 2, "applic": 2, "produc": 2, "extraordinarili": 2, "ugli": 2, "chapter": 2, "which": [2, 5], "loopfree_wp_transform": 2, "\u03bb\ud835\udc4b": 2, "\ud835\udc4b": 2, "expectationtransform": 2, "wai": 2, "theorem": 2, "page": 2, "173": 2, "mathrm": 2, "ert": 2, "llbracket": 2, "rrbracket": 2, "t": [2, 6], "obtain": 2, "simpli": 2, "ignor": [2, 3], "replac": [2, 5], "advanc": 2, "precondit": 2, "calculi": 2, "benjamin": 2, "kaminski": 2, "2019": 2, "definit": 2, "rather": 2, "straightforward": 2, "postexpect": 2, "At": 2, "moment": 2, "dag": 2, "subexpress": 2, "occur": 2, "multipl": 2, "deepcopi": [2, 5], "even": 2, "though": 2, "strictli": 2, "twice": 2, "could": 2, "reus": 2, "cannot": [2, 5], "non": 2, "wrap": [2, 6], "hold": [2, 5], "v": 2, "phi": 2, "simplifi": 2, "snfexpectationtransform": 2, "normalize_expectation_transform": 2, "substitute_expr": 2, "keep": 2, "symbol": [2, 4, 5], "self": 2, "conveni": 2, "intern": 2, "post": 2, "chang": 2, "set": [2, 5, 6], "take": [2, 4], "care": [2, 4], "further": 2, "remain": 2, "elsewher": 2, "least": 2, "fix": 2, "undecid": 2, "explicit": 2, "singl": 2, "special": 2, "loopexpectationtransform": 2, "cfg": 2, "program_one_big_loop": 2, "arbitrarili": 2, "structur": [2, 5], "Then": 2, "init": 2, "themselv": 2, "term": 2, "termin": 2, "never": [2, 3], "multipli": 2, "simpler": 2, "shown": 2, "mathtt": 2, "b": [2, 6], "lfp": 2, "underbrac": 2, "cdot": 2, "_": 2, "one_loop_wp_transform": 2, "\u03bb\ud835\udc39": 2, "\ud835\udc39": 2, "repr": 2, "when": [2, 6], "begin": 2, "mean": 2, "e1": 2, "e2": 2, "general_wp_transform": 2, "invok": 2, "directli": [2, 4], "other": 2, "through": 2, "introduc": 2, "addit": 2, "counter": 2, "pc": 2, "mathsf": 2, "ae": 2, "lin": 2, "adher": 2, "align": 2, "rightarrow": 2, "quad": 2, "small": 2, "mid": 2, "dot": 2, "monu": 2, "subtract": 2, "truncat": 2, "distinguish": 2, "between": 2, "varphi": 2, "BE": 2, "strict": 2, "inequ": 2, "land": 2, "conjunct": 2, "lor": 2, "disjunct": 2, "ever": 2, "easili": 2, "rewritten": 2, "normalize_expect": 2, "exp": 2, "infti": [2, 3], "scale": 2, "guard": 2, "q": 2, "ration": 2, "wikipedia": 2, "mathemat": 2, "check_is_linear_program": 2, "check_is_linear_expr": 2, "bracket": 2, "divis": 2, "pass": [2, 4], "parse_expect": 2, "check_is_one_big_loop": 2, "allow_init": 2, "base": 2, "suffic": 2, "slightli": 2, "tricki": 2, "part": [2, 4], "To": 2, "avoid": 2, "ambigu": 2, "individu": 2, "weight": 2, "attach": 2, "save": 2, "temporari": 2, "likelyexpr": 2, "collect": 2, "outsid": 2, "programconfig": 2, "z": 2, "traceback": 2, "recent": 2, "last": 2, "kind": 2, "direct": 2, "bottom": 2, "top": 2, "down": 2, "select": 2, "ref": [2, 6], "mut": [2, 5, 6], "fold": 2, "callback": 2, "walk_expr": 2, "val": [2, 5, 6], "access": 2, "alloc": [2, 5, 6], "why": 2, "manual": 2, "framework": 2, "easi": [2, 6], "flexibl": 2, "hard": 2, "forget": 2, "happen": 2, "wa": 2, "fail": 2, "expected_type_got": 2, "got": 2, "expected_numeric_got": 2, "fmap": 2, "extract": 2, "whoop": 2, "typevar": [2, 6], "_t": 2, "get": 2, "forc": 2, "correct": 2, "determin": 2, "is_compat": 2, "compat": 2, "essenti": 2, "implicit": 2, "coercion": 2, "rule": 2, "check_instr": 2, "safeti": 2, "const": [2, 3], "check_program": 2, "check_express": 2, "check_expect": 2, "purpos": [2, 3], "elimin": 2, "particular": 2, "safe": 2, "limit": 2, "unnecessarili": 2, "turn": 2, "mutat": 2, "prevent": [2, 4], "spooki": 2, "action": 2, "distanc": 2, "taken": 2, "placehold": 2, "arbitrari": 2, "known": [2, 4], "expr_ref": [2, 5], "being": 2, "found": 2, "anoth": 2, "much": 2, "sophist": 2, "than": 2, "approach": 2, "doubli": 2, "comparison": 2, "test": [2, 5, 6], "test_substitut": 2, "py": 2, "local": [2, 5], "bind": [2, 5], "phase": 2, "_binder": [2, 5], "now": 2, "rememb": 2, "children": 2, "resolv": [2, 5], "irrelev": 2, "On": 2, "ones": [2, 5], "t1": 2, "t2": 2, "insert": 2, "final": 2, "t_i": 2, "step": [2, 5], "clearli": 2, "chain": 2, "amort": 2, "lookup": [2, 5], "so": [2, 4], "veri": 2, "loos": 2, "inspir": 2, "articl": 2, "nameless": 2, "awesom": 2, "titl": 2, "paper": 2, "am": 2, "footnot": 2, "boarder": 2, "io": 2, "2004": 2, "mcbride": 2, "mckinna": 2, "after": 2, "execut": 2, "anywher": 2, "frozenset": [2, 5], "descript": 2, "substitute_constants_expr": 2, "23": 2, "becom": 2, "your": 2, "dumb": 2, "toddler": 2, "place": 2, "simplifying_and": 2, "simplifying_plu": 2, "simplifying_tim": 2, "simplifying_subst": 2, "simplifying_neg": 2, "unwrap": 2, "snfexpectationtransformerproduct": 2, "product": 2, "from_iverson": 2, "from_prob": 2, "from_subst": 2, "from_tick": 2, "snf": 2, "includ": 2, "subtitut": 2, "expectation_transform": 2, "appear": 2, "whenev": 2, "lot": 2, "decompil": 2, "back": 2, "again": 2, "main": 2, "render_dot": 2, "digraph": 2, "visual": 2, "graphviz": 2, "how": [2, 4], "terminatorkind": 2, "die": 2, "if_tru": 2, "if_fals": 2, "indic": 2, "leaf": 2, "goto": 2, "construct": 2, "properti": [2, 6], "is_goto": 2, "flip": 2, "switch": 2, "blocktyp": 2, "marker": 2, "convers": 2, "pretti": [2, 6], "debug": 2, "converg": 2, "head": 2, "entri": 2, "loop_head": 2, "seri": 2, "uncondit": 2, "is_trap": 2, "entry_id": 2, "basic_block": 2, "index": 2, "to_networkx": 2, "len": 2, "fresh_block": 2, "networkx": 2, "render": 2, "file": 2, "filenam": 2, "svg": 2, "quickli": 2, "jumptabl": 2, "pc_var": 2, "tabl": [2, 6], "42": [2, 6], "b1": 2, "b2": 2, "ll": 2, "connect": 2, "enter": 2, "unreach": 2, "write": [2, 6], "exit": 2, "error_id": 2, "appropi": 2, "intenti": 2, "size": 2, "decid": 2, "harder": 2, "exclud": 2, "bit": 2, "should": [2, 3], "properli": 2, "annot": 2, "header": 2, "contriv": 2, "redund": 2, "complic": 2, "diagram": 2, "subtleti": 2, "imag": 2, "abov": 2, "been": 2, "goe": 2, "reproduc": 2, "unfortun": 2, "By": 2, "obvious": 2, "need": 2, "inner": [2, 5], "outer": [2, 5], "br": 2, "extra": 2, "appropri": [2, 4], "recreat": 2, "frighteningli": 2, "complex": 2, "studi": 2, "problem": 2, "ancient": 2, "flowchart": 2, "unread": 2, "folk": 2, "block1": 2, "elif": 2, "block2": 2, "smarter": 2, "reconstruct": 2, "hierarch": 2, "d": 2, "path": 2, "neq": 2, "immedi": 2, "predecessor": 2, "edg": 2, "cycl": [2, 5], "concaten": 2, "long": 2, "fcd16": 2, "fortun": 2, "restrict": 2, "almost": 2, "difficulti": 2, "separ": 2, "complet": 2, "clear": 2, "task": 2, "particularli": 2, "reloop": 2, "emscripten": 2, "attempt": 2, "j": 2, "llvm": 2, "zak11": 2, "iozzelli": 2, "revisit": 2, "cheerp": 2, "ioz19": 2, "idea": 2, "discov": 2, "dispatch": 2, "Their": 2, "interest": 2, "improv": 2, "cost": 2, "although": 2, "hopefulli": 2, "attent": 2, "reader": 2, "might": 2, "notic": 2, "would": 2, "subsum": 2, "easier": 2, "split": 2, "acycl": 2, "contrast": 2, "break": 2, "fcd": 2, "blog": 2, "2016": 2, "javascript": 2, "alon": 2, "zakai": 2, "oopsla": 2, "solv": 2, "yuri": 2, "ad": 2, "probabl": 3, "_doc_parser_grammar": 3, "rparam": 3, "nparam": 3, "els": 3, "rvalu": 3, "ex": 3, "pr": 3, "prqueri": 3, "plot": 3, "opt": 3, "optim": 3, "unif_d": 3, "duniform": 3, "unif_c": 3, "cuniform": 3, "logdist": 3, "binomi": 3, "iid": 3, "cname": 3, "m": [3, 6], "w": 3, "common": 3, "expression_0": 3, "expression_1": 3, "expression_2": 3, "expression_3": 3, "le": 3, "ge": 3, "expression_4": 3, "expression_5": 3, "expression_6": 3, "mod": 3, "expression_7": 3, "paren": [3, 6], "exist": 3, "few": 4, "translationcontext": 4, "id_subst": 4, "fnode": 4, "from_program": 4, "formula": 4, "expr_to_pysmt": 4, "is_expect": 4, "allow_infin": 4, "constrain": 4, "shortcut": 4, "numer": 5, "identifi": 5, "binder": 5, "manag": 5, "_boundexpr": 5, "procedur": 5, "doc": 5, "_deepcopies_": 5, "_subst": 5, "boundexpr": 5, "section": 5, "add_bound": 5, "newli": 5, "var_expr": 5, "dictionari": 5, "_bind_subst": 5, "assert": 5, "order": [5, 6], "x1": 5, "x2": 5, "dedup_list": 6, "dedupl": 6, "getter": 6, "setter": 6, "callabl": 6, "anonmy": 6, "isn": 6, "element": 6, "my_list": 6, "ref_list": 6, "15": 6, "dict_item": 6, "kei": 6, "my_dict": 6, "hello": 6, "43": 6, "dict_valu": 6, "mess": 6, "infixl": 6, "prefix": 6, "atom": 6, "build_expr_pars": 6, "test_0": 6, "test_1": 6, "lark_expr_pars": 6, "assoc": 6, "op": 6, "_infixoper": 6, "_prefixoper": 6, "_postfixoper": 6, "_atomoper": 6, "infixr": 6, "postfix": 6, "rule_str": 6, "operatort": 6, "level": 6, "ascend": 6, "rule_nam": 6}, "objects": {"probably": [[1, 0, 0, "-", "cmd"], [2, 0, 0, "-", "pgcl"], [4, 0, 0, "-", "pysmt"], [6, 0, 0, "-", "util"], [1, 7, 1, "cmdoption-probably-arg-INPUT", "INPUT"]], "probably.pgcl": [[2, 0, 0, "-", "ast"], [2, 0, 0, "-", "cfg"], [2, 0, 0, "-", "check"], [2, 0, 0, "-", "compiler"], [2, 0, 0, "-", "parser"], [2, 0, 0, "-", "simplify"], [2, 0, 0, "-", "substitute"], [2, 0, 0, "-", "syntax"], [2, 0, 0, "-", "walk"], [2, 0, 0, "-", "wp"]], "probably.pgcl.ast": [[2, 1, 1, "", "AsgnInstr"], [2, 1, 1, "", "BernoulliExpr"], [2, 1, 1, "", "BinomialExpr"], [2, 1, 1, "", "Binop"], [2, 1, 1, "", "BinopExpr"], [2, 1, 1, "", "BoolLitExpr"], [2, 1, 1, "", "BoolType"], [2, 1, 1, "", "Bounds"], [2, 1, 1, "", "CUniformExpr"], [2, 1, 1, "", "CategoricalExpr"], [2, 1, 1, "", "ChoiceInstr"], [2, 1, 1, "", "ConstDecl"], [2, 1, 1, "", "DUniformExpr"], [2, 4, 1, "", "Decl"], [2, 1, 1, "", "DeclClass"], [2, 4, 1, "", "DistrExpr"], [2, 1, 1, "", "ExpectationInstr"], [2, 4, 1, "", "Expr"], [2, 1, 1, "", "ExprClass"], [2, 1, 1, "", "GeometricExpr"], [2, 1, 1, "", "IfInstr"], [2, 1, 1, "", "IidSampleExpr"], [2, 4, 1, "", "Instr"], [2, 1, 1, "", "InstrClass"], [2, 1, 1, "", "LogDistExpr"], [2, 1, 1, "", "LoopInstr"], [2, 1, 1, "", "NatLitExpr"], [2, 1, 1, "", "NatType"], [2, 1, 1, "", "Node"], [2, 1, 1, "", "ObserveInstr"], [2, 1, 1, "", "OptimizationQuery"], [2, 1, 1, "", "OptimizationType"], [2, 1, 1, "", "ParameterDecl"], [2, 1, 1, "", "PlotInstr"], [2, 1, 1, "", "PoissonExpr"], [2, 1, 1, "", "PrintInstr"], [2, 1, 1, "", "ProbabilityQueryInstr"], [2, 1, 1, "", "Program"], [2, 4, 1, "", "Query"], [2, 1, 1, "", "RealLitExpr"], [2, 1, 1, "", "RealType"], [2, 1, 1, "", "SkipInstr"], [2, 1, 1, "", "SubstExpr"], [2, 1, 1, "", "TickExpr"], [2, 1, 1, "", "TickInstr"], [2, 4, 1, "", "Type"], [2, 1, 1, "", "TypeClass"], [2, 1, 1, "", "Unop"], [2, 1, 1, "", "UnopExpr"], [2, 1, 1, "", "VarDecl"], [2, 1, 1, "", "VarExpr"], [2, 1, 1, "", "WhileInstr"]], "probably.pgcl.ast.AsgnInstr": [[2, 2, 1, "", "lhs"], [2, 2, 1, "", "rhs"]], "probably.pgcl.ast.BernoulliExpr": [[2, 2, 1, "", "param"]], "probably.pgcl.ast.BinomialExpr": [[2, 2, 1, "", "n"], [2, 2, 1, "", "p"]], "probably.pgcl.ast.Binop": [[2, 2, 1, "", "AND"], [2, 2, 1, "", "DIVIDE"], [2, 2, 1, "", "EQ"], [2, 2, 1, "", "GEQ"], [2, 2, 1, "", "GT"], [2, 2, 1, "", "LEQ"], [2, 2, 1, "", "LT"], [2, 2, 1, "", "MINUS"], [2, 2, 1, "", "MODULO"], [2, 2, 1, "", "OR"], [2, 2, 1, "", "PLUS"], [2, 2, 1, "", "POWER"], [2, 2, 1, "", "TIMES"], [2, 3, 1, "", "is_associative"]], "probably.pgcl.ast.BinopExpr": [[2, 3, 1, "", "flatten"], [2, 2, 1, "", "lhs"], [2, 2, 1, "", "operator"], [2, 3, 1, "", "reduce"], [2, 2, 1, "", "rhs"]], "probably.pgcl.ast.BoolLitExpr": [[2, 2, 1, "", "value"]], "probably.pgcl.ast.Bounds": [[2, 2, 1, "", "lower"], [2, 2, 1, "", "upper"]], "probably.pgcl.ast.CUniformExpr": [[2, 2, 1, "", "end"], [2, 2, 1, "", "start"]], "probably.pgcl.ast.CategoricalExpr": [[2, 3, 1, "", "distribution"], [2, 2, 1, "", "exprs"]], "probably.pgcl.ast.ChoiceInstr": [[2, 2, 1, "", "lhs"], [2, 2, 1, "", "prob"], [2, 2, 1, "", "rhs"]], "probably.pgcl.ast.ConstDecl": [[2, 2, 1, "", "value"], [2, 2, 1, "", "var"]], "probably.pgcl.ast.DUniformExpr": [[2, 3, 1, "", "distribution"], [2, 2, 1, "", "end"], [2, 2, 1, "", "start"]], "probably.pgcl.ast.DeclClass": [[2, 3, 1, "", "__str__"]], "probably.pgcl.ast.ExpectationInstr": [[2, 2, 1, "", "expr"]], "probably.pgcl.ast.ExprClass": [[2, 3, 1, "", "__str__"], [2, 3, 1, "", "cast"]], "probably.pgcl.ast.GeometricExpr": [[2, 2, 1, "", "param"]], "probably.pgcl.ast.IfInstr": [[2, 2, 1, "", "cond"], [2, 2, 1, "", "false"], [2, 2, 1, "", "true"]], "probably.pgcl.ast.IidSampleExpr": [[2, 2, 1, "", "sampling_dist"], [2, 2, 1, "", "variable"]], "probably.pgcl.ast.InstrClass": [[2, 3, 1, "", "__str__"], [2, 3, 1, "", "cast"]], "probably.pgcl.ast.LogDistExpr": [[2, 2, 1, "", "param"]], "probably.pgcl.ast.LoopInstr": [[2, 2, 1, "", "body"], [2, 2, 1, "", "iterations"]], "probably.pgcl.ast.NatLitExpr": [[2, 2, 1, "", "value"]], "probably.pgcl.ast.NatType": [[2, 2, 1, "", "bounds"]], "probably.pgcl.ast.ObserveInstr": [[2, 2, 1, "", "cond"]], "probably.pgcl.ast.OptimizationQuery": [[2, 2, 1, "", "expr"], [2, 2, 1, "", "parameter"], [2, 2, 1, "", "type"]], "probably.pgcl.ast.OptimizationType": [[2, 2, 1, "", "MAXIMIZE"], [2, 2, 1, "", "MINIMIZE"]], "probably.pgcl.ast.ParameterDecl": [[2, 2, 1, "", "typ"], [2, 2, 1, "", "var"]], "probably.pgcl.ast.PlotInstr": [[2, 2, 1, "", "prob"], [2, 2, 1, "", "term_count"], [2, 2, 1, "", "var_1"], [2, 2, 1, "", "var_2"]], "probably.pgcl.ast.PoissonExpr": [[2, 2, 1, "", "param"]], "probably.pgcl.ast.ProbabilityQueryInstr": [[2, 2, 1, "", "expr"]], "probably.pgcl.ast.Program": [[2, 3, 1, "", "__str__"], [2, 3, 1, "", "add_variable"], [2, 2, 1, "", "constants"], [2, 2, 1, "", "declarations"], [2, 3, 1, "", "from_parse"], [2, 2, 1, "", "instructions"], [2, 2, 1, "", "parameters"], [2, 3, 1, "", "to_skeleton"], [2, 2, 1, "", "variables"]], "probably.pgcl.ast.RealLitExpr": [[2, 3, 1, "", "infinity"], [2, 3, 1, "", "is_infinite"], [2, 3, 1, "", "to_fraction"], [2, 2, 1, "", "value"]], "probably.pgcl.ast.SubstExpr": [[2, 2, 1, "", "expr"], [2, 2, 1, "", "subst"]], "probably.pgcl.ast.TickExpr": [[2, 2, 1, "", "expr"], [2, 3, 1, "", "is_zero"]], "probably.pgcl.ast.TickInstr": [[2, 2, 1, "", "expr"]], "probably.pgcl.ast.Unop": [[2, 2, 1, "", "IVERSON"], [2, 2, 1, "", "NEG"]], "probably.pgcl.ast.UnopExpr": [[2, 2, 1, "", "expr"], [2, 2, 1, "", "operator"]], "probably.pgcl.ast.VarDecl": [[2, 2, 1, "", "typ"], [2, 2, 1, "", "var"]], "probably.pgcl.ast.VarExpr": [[2, 2, 1, "", "var"]], "probably.pgcl.ast.WhileInstr": [[2, 2, 1, "", "body"], [2, 2, 1, "", "cond"]], "probably.pgcl.cfg": [[2, 1, 1, "", "BasicBlock"], [2, 1, 1, "", "BlockType"], [2, 1, 1, "", "ControlFlowGraph"], [2, 1, 1, "", "JumpTable"], [2, 1, 1, "", "Terminator"], [2, 1, 1, "", "TerminatorKind"], [0, 1, 1, "", "_Region"], [0, 6, 1, "", "_expand_region"], [0, 6, 1, "", "_join_regions"], [2, 6, 1, "", "one_big_loop"], [2, 6, 1, "", "program_one_big_loop"], [2, 6, 1, "", "reduce_cfg_to_instrs"]], "probably.pgcl.cfg.BasicBlock": [[2, 2, 1, "", "assignments"], [2, 2, 1, "", "ident"], [2, 3, 1, "", "is_trap"], [2, 2, 1, "", "terminator"], [2, 2, 1, "", "typ"]], "probably.pgcl.cfg.BlockType": [[2, 2, 1, "", "FORWARD"], [2, 2, 1, "", "LOOP_HEAD"], [2, 2, 1, "", "TRAMPOLINE"]], "probably.pgcl.cfg.ControlFlowGraph": [[2, 2, 1, "", "entry_id"], [2, 3, 1, "", "fresh_block"], [2, 3, 1, "", "from_instructions"], [2, 3, 1, "", "render_dot"], [2, 3, 1, "", "substitute"], [2, 3, 1, "", "to_networkx"]], "probably.pgcl.cfg.JumpTable": [[2, 2, 1, "", "entry_id"], [2, 2, 1, "", "error_id"], [2, 3, 1, "", "finalize"], [2, 3, 1, "", "trampoline"]], "probably.pgcl.cfg.Terminator": [[2, 2, 1, "", "LEAF"], [2, 3, 1, "", "branch"], [2, 3, 1, "", "choice"], [2, 2, 1, "", "condition"], [2, 3, 1, "", "flip"], [2, 3, 1, "", "goto"], [2, 2, 1, "", "if_false"], [2, 2, 1, "", "if_true"], [2, 3, 1, "", "is_goto"], [2, 2, 1, "", "kind"], [2, 3, 1, "", "substitute"], [2, 5, 1, "", "successors"]], "probably.pgcl.cfg.TerminatorKind": [[2, 2, 1, "", "BOOLEAN"], [2, 2, 1, "", "PROBABILISTIC"]], "probably.pgcl.cfg._Region": [[0, 3, 1, "", "add_block"], [0, 3, 1, "", "child"], [0, 3, 1, "", "dominates_successor"], [0, 2, 1, "", "dominator_id"], [0, 3, 1, "", "initial"], [0, 2, 1, "", "instrs"], [0, 2, 1, "", "successor_id"]], "probably.pgcl.check": [[2, 1, 1, "", "CheckFail"], [2, 6, 1, "", "check_expectation"], [2, 6, 1, "", "check_expression"], [2, 6, 1, "", "check_instr"], [2, 6, 1, "", "check_program"], [2, 6, 1, "", "get_type"], [2, 6, 1, "", "is_compatible"]], "probably.pgcl.check.CheckFail": [[2, 3, 1, "", "expected_numeric_got"], [2, 3, 1, "", "expected_type_got"], [2, 3, 1, "", "fmap"], [2, 2, 1, "", "location"], [2, 2, 1, "", "message"]], "probably.pgcl.compiler": [[2, 6, 1, "", "compile_expectation"], [2, 6, 1, "", "compile_expr"], [2, 6, 1, "", "compile_pgcl"]], "probably.pgcl.parser": [[3, 6, 1, "", "_doc_parser_grammar"], [2, 6, 1, "", "parse_expectation"], [2, 6, 1, "", "parse_expr"], [2, 6, 1, "", "parse_pgcl"]], "probably.pgcl.simplify": [[2, 1, 1, "", "SnfExpectationTransformer"], [2, 1, 1, "", "SnfExpectationTransformerProduct"], [2, 6, 1, "", "normalize_expectation"], [2, 6, 1, "", "normalize_expectation_transformer"], [2, 6, 1, "", "simplifying_and"], [2, 6, 1, "", "simplifying_neg"], [2, 6, 1, "", "simplifying_plus"], [2, 6, 1, "", "simplifying_subst"], [2, 6, 1, "", "simplifying_times"]], "probably.pgcl.simplify.SnfExpectationTransformer": [[2, 3, 1, "", "from_iverson"], [2, 3, 1, "", "from_prob"], [2, 3, 1, "", "from_subst"], [2, 3, 1, "", "from_ticks"], [2, 3, 1, "", "substitute"]], "probably.pgcl.simplify.SnfExpectationTransformerProduct": [[2, 3, 1, "", "from_iverson"], [2, 3, 1, "", "from_prob"], [2, 3, 1, "", "from_subst"], [2, 3, 1, "", "from_ticks"], [2, 2, 1, "", "guard"], [2, 2, 1, "", "prob"], [2, 2, 1, "", "subst"], [2, 3, 1, "", "substitute"], [2, 2, 1, "", "ticks"]], "probably.pgcl.substitute": [[5, 1, 1, "", "_Binder"], [5, 1, 1, "", "_Subst"], [5, 6, 1, "", "_bind_substs"], [2, 6, 1, "", "substitute_constants"], [2, 6, 1, "", "substitute_constants_expr"], [2, 6, 1, "", "substitute_expr"]], "probably.pgcl.substitute._Binder": [[5, 3, 1, "", "bind"], [5, 3, 1, "", "lookup"], [5, 3, 1, "", "resolve"]], "probably.pgcl.substitute._Subst": [[5, 3, 1, "", "add_bound"], [5, 3, 1, "", "apply"], [5, 3, 1, "", "copy"]], "probably.pgcl.syntax": [[2, 6, 1, "", "check_is_linear_expr"], [2, 6, 1, "", "check_is_linear_program"], [2, 6, 1, "", "check_is_one_big_loop"]], "probably.pgcl.wp": [[2, 1, 1, "", "ExpectationTransformer"], [2, 1, 1, "", "LoopExpectationTransformer"], [2, 6, 1, "", "general_wp_transformer"], [2, 6, 1, "", "loopfree_wp"], [2, 6, 1, "", "loopfree_wp_transformer"], [2, 6, 1, "", "one_loop_wp_transformer"]], "probably.pgcl.wp.ExpectationTransformer": [[2, 3, 1, "", "apply"], [2, 2, 1, "", "expectation"], [2, 3, 1, "", "substitute"], [2, 2, 1, "", "variable"]], "probably.pgcl.wp.LoopExpectationTransformer": [[2, 2, 1, "", "body"], [2, 2, 1, "", "done"], [2, 2, 1, "", "init"]], "probably.pysmt": [[4, 0, 0, "-", "context"], [4, 0, 0, "-", "expr"]], "probably.pysmt.context": [[4, 1, 1, "", "TranslationContext"]], "probably.pysmt.context.TranslationContext": [[4, 3, 1, "", "from_program"], [4, 2, 1, "", "id_subst"], [4, 2, 1, "", "infinity"], [4, 2, 1, "", "variables"]], "probably.pysmt.expr": [[4, 6, 1, "", "expr_to_pysmt"]], "probably.util": [[6, 6, 1, "", "dedup_list"], [6, 0, 0, "-", "lark_expr_parser"], [6, 0, 0, "-", "ref"]], "probably.util.lark_expr_parser": [[6, 1, 1, "", "Assoc"], [6, 4, 1, "", "OperatorTable"], [6, 6, 1, "", "atom"], [6, 6, 1, "", "build_expr_parser"], [6, 6, 1, "", "infixl"], [6, 6, 1, "", "infixr"], [6, 6, 1, "", "postfix"], [6, 6, 1, "", "prefix"]], "probably.util.lark_expr_parser.Assoc": [[6, 2, 1, "", "LEFT"], [6, 2, 1, "", "RIGHT"]], "probably.util.ref": [[6, 1, 1, "", "Mut"], [6, 4, 1, "", "Ref"]], "probably.util.ref.Mut": [[6, 3, 1, "", "alloc"], [6, 3, 1, "", "dict_items"], [6, 3, 1, "", "dict_values"], [6, 3, 1, "", "iterate"], [6, 3, 1, "", "list"], [6, 2, 1, "", "read"], [6, 5, 1, "", "val"], [6, 3, 1, "", "wrap"], [6, 2, 1, "", "write"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:property", "6": "py:function", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"probabl": [0, 1, 2, 4, 5, 6], "pgcl": [0, 2, 3, 5], "cfg": 0, "intern": [0, 5], "document": 1, "api": 1, "command": 1, "line": 1, "interfac": 1, "compil": 2, "frontend": 2, "ast": 2, "program": 2, "type": 2, "declar": 2, "express": [2, 4, 6], "instruct": 2, "superclass": 2, "weakest": 2, "pre": 2, "expect": 2, "loop": 2, "free": 2, "todo": 2, "transform": 2, "shape": 2, "linear": 2, "One": 2, "big": 2, "parser": [2, 6], "walk": 2, "check": 2, "variabl": 2, "substitut": [2, 5], "simplif": 2, "control": 2, "flow": 2, "graph": 2, "grammar": 3, "pysmt": 4, "translat": 4, "context": 4, "util": 6, "mutabl": 6, "refer": 6, "lark": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"probably.pgcl.cfg Internals": [[0, "probably-pgcl-cfg-internals"]], "Probably Documentation": [[1, "probably-documentation"]], "API Documentation": [[1, "api-documentation"]], "Command-Line Interface": [[1, "module-probably.cmd"]], "probably": [[1, "probably"]], "probably.pgcl": [[2, "probably-pgcl"]], "Compiler Frontend": [[2, "compiler-frontend"]], "AST": [[2, "ast"]], "Program": [[2, "program"]], "Types": [[2, "types"]], "Declarations": [[2, "declarations"]], "Expressions": [[2, "expressions"]], "Instructions": [[2, "instructions"]], "Superclasses": [[2, "superclasses"]], "Weakest Pre-Expectations": [[2, "weakest-pre-expectations"]], "Loop-Free": [[2, "loop-free"]], "Todo": [[2, "id5"]], "Transformers": [[2, "transformers"]], "Loops": [[2, "loops"]], "Program Shapes": [[2, "program-shapes"]], "Linearity": [[2, "linearity"]], "One Big Loop": [[2, "one-big-loop"]], "Parser": [[2, "parser"]], "Walking ASTs": [[2, "walking-asts"]], "Type Checking": [[2, "type-checking"]], "Variable Substitution": [[2, "variable-substitution"]], "Expression Simplification": [[2, "expression-simplification"]], "Control-Flow Graph": [[2, "control-flow-graph"]], "pGCL Grammar": [[3, "pgcl-grammar"]], "probably.pysmt": [[4, "probably-pysmt"]], "Translation Context": [[4, "translation-context"]], "Expression Translation": [[4, "expression-translation"]], "probably.pgcl.substitute Internals": [[5, "probably-pgcl-substitute-internals"]], "probably.util": [[6, "probably-util"]], "Mutable References": [[6, "mutable-references"]], "Lark Expression Parser": [[6, "lark-expression-parser"]]}, "indexentries": {"_region (class in probably.pgcl.cfg)": [[0, "probably.pgcl.cfg._Region"]], "_expand_region() (in module probably.pgcl.cfg)": [[0, "probably.pgcl.cfg._expand_region"]], "_join_regions() (in module probably.pgcl.cfg)": [[0, "probably.pgcl.cfg._join_regions"]], "add_block() (probably.pgcl.cfg._region method)": [[0, "probably.pgcl.cfg._Region.add_block"]], "child() (probably.pgcl.cfg._region static method)": [[0, "probably.pgcl.cfg._Region.child"]], "dominates_successor() (probably.pgcl.cfg._region method)": [[0, "probably.pgcl.cfg._Region.dominates_successor"]], "dominator_id (probably.pgcl.cfg._region attribute)": [[0, "probably.pgcl.cfg._Region.dominator_id"]], "initial() (probably.pgcl.cfg._region static method)": [[0, "probably.pgcl.cfg._Region.initial"]], "instrs (probably.pgcl.cfg._region attribute)": [[0, "probably.pgcl.cfg._Region.instrs"]], "successor_id (probably.pgcl.cfg._region attribute)": [[0, "probably.pgcl.cfg._Region.successor_id"]], "input": [[1, "cmdoption-probably-arg-INPUT"]], "module": [[1, "module-probably.cmd"], [2, "module-probably.pgcl"], [2, "module-probably.pgcl.ast"], [2, "module-probably.pgcl.cfg"], [2, "module-probably.pgcl.check"], [2, "module-probably.pgcl.compiler"], [2, "module-probably.pgcl.parser"], [2, "module-probably.pgcl.simplify"], [2, "module-probably.pgcl.substitute"], [2, "module-probably.pgcl.syntax"], [2, "module-probably.pgcl.walk"], [2, "module-probably.pgcl.wp"], [4, "module-probably.pysmt"], [4, "module-probably.pysmt.context"], [4, "module-probably.pysmt.expr"], [6, "module-probably.util"], [6, "module-probably.util.lark_expr_parser"], [6, "module-probably.util.ref"]], "probably command line option": [[1, "cmdoption-probably-arg-INPUT"]], "probably.cmd": [[1, "module-probably.cmd"]], "and (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.AND"]], "asgninstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.AsgnInstr"]], "boolean (probably.pgcl.cfg.terminatorkind attribute)": [[2, "probably.pgcl.cfg.TerminatorKind.BOOLEAN"]], "basicblock (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.BasicBlock"]], "bernoulliexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.BernoulliExpr"]], "binomialexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.BinomialExpr"]], "binop (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.Binop"]], "binopexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.BinopExpr"]], "blocktype (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.BlockType"]], "boollitexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.BoolLitExpr"]], "booltype (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.BoolType"]], "bounds (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.Bounds"]], "cuniformexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.CUniformExpr"]], "categoricalexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.CategoricalExpr"]], "checkfail (class in probably.pgcl.check)": [[2, "probably.pgcl.check.CheckFail"]], "choiceinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ChoiceInstr"]], "constdecl (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ConstDecl"]], "controlflowgraph (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.ControlFlowGraph"]], "divide (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.DIVIDE"]], "duniformexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.DUniformExpr"]], "decl (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.Decl"]], "declclass (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.DeclClass"]], "distrexpr (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.DistrExpr"]], "eq (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.EQ"]], "expectationinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ExpectationInstr"]], "expectationtransformer (class in probably.pgcl.wp)": [[2, "probably.pgcl.wp.ExpectationTransformer"]], "expr (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.Expr"]], "exprclass (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ExprClass"]], "forward (probably.pgcl.cfg.blocktype attribute)": [[2, "probably.pgcl.cfg.BlockType.FORWARD"]], "geq (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.GEQ"]], "gt (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.GT"]], "geometricexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.GeometricExpr"]], "iverson (probably.pgcl.ast.unop attribute)": [[2, "probably.pgcl.ast.Unop.IVERSON"]], "ifinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.IfInstr"]], "iidsampleexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.IidSampleExpr"]], "instr (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.Instr"]], "instrclass (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.InstrClass"]], "jumptable (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.JumpTable"]], "leaf (probably.pgcl.cfg.terminator attribute)": [[2, "probably.pgcl.cfg.Terminator.LEAF"]], "leq (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.LEQ"]], "loop_head (probably.pgcl.cfg.blocktype attribute)": [[2, "probably.pgcl.cfg.BlockType.LOOP_HEAD"]], "lt (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.LT"]], "logdistexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.LogDistExpr"]], "loopexpectationtransformer (class in probably.pgcl.wp)": [[2, "probably.pgcl.wp.LoopExpectationTransformer"]], "loopinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.LoopInstr"]], "maximize (probably.pgcl.ast.optimizationtype attribute)": [[2, "probably.pgcl.ast.OptimizationType.MAXIMIZE"]], "minimize (probably.pgcl.ast.optimizationtype attribute)": [[2, "probably.pgcl.ast.OptimizationType.MINIMIZE"]], "minus (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.MINUS"]], "modulo (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.MODULO"]], "neg (probably.pgcl.ast.unop attribute)": [[2, "probably.pgcl.ast.Unop.NEG"]], "natlitexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.NatLitExpr"]], "nattype (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.NatType"]], "node (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.Node"]], "or (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.OR"]], "observeinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ObserveInstr"]], "optimizationquery (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.OptimizationQuery"]], "optimizationtype (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.OptimizationType"]], "plus (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.PLUS"]], "power (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.POWER"]], "probabilistic (probably.pgcl.cfg.terminatorkind attribute)": [[2, "probably.pgcl.cfg.TerminatorKind.PROBABILISTIC"]], "parameterdecl (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ParameterDecl"]], "plotinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.PlotInstr"]], "poissonexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.PoissonExpr"]], "printinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.PrintInstr"]], "probabilityqueryinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.ProbabilityQueryInstr"]], "program (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.Program"]], "query (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.Query"]], "reallitexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.RealLitExpr"]], "realtype (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.RealType"]], "skipinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.SkipInstr"]], "snfexpectationtransformer (class in probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer"]], "snfexpectationtransformerproduct (class in probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct"]], "substexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.SubstExpr"]], "times (probably.pgcl.ast.binop attribute)": [[2, "probably.pgcl.ast.Binop.TIMES"]], "trampoline (probably.pgcl.cfg.blocktype attribute)": [[2, "probably.pgcl.cfg.BlockType.TRAMPOLINE"]], "terminator (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.Terminator"]], "terminatorkind (class in probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.TerminatorKind"]], "tickexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.TickExpr"]], "tickinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.TickInstr"]], "type (in module probably.pgcl.ast)": [[2, "probably.pgcl.ast.Type"]], "typeclass (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.TypeClass"]], "unop (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.Unop"]], "unopexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.UnopExpr"]], "vardecl (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.VarDecl"]], "varexpr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.VarExpr"]], "whileinstr (class in probably.pgcl.ast)": [[2, "probably.pgcl.ast.WhileInstr"]], "__str__() (probably.pgcl.ast.declclass method)": [[2, "probably.pgcl.ast.DeclClass.__str__"]], "__str__() (probably.pgcl.ast.exprclass method)": [[2, "probably.pgcl.ast.ExprClass.__str__"]], "__str__() (probably.pgcl.ast.instrclass method)": [[2, "probably.pgcl.ast.InstrClass.__str__"]], "__str__() (probably.pgcl.ast.program method)": [[2, "probably.pgcl.ast.Program.__str__"]], "add_variable() (probably.pgcl.ast.program method)": [[2, "probably.pgcl.ast.Program.add_variable"]], "apply() (probably.pgcl.wp.expectationtransformer method)": [[2, "probably.pgcl.wp.ExpectationTransformer.apply"]], "assignments (probably.pgcl.cfg.basicblock attribute)": [[2, "probably.pgcl.cfg.BasicBlock.assignments"]], "body (probably.pgcl.ast.loopinstr attribute)": [[2, "probably.pgcl.ast.LoopInstr.body"]], "body (probably.pgcl.ast.whileinstr attribute)": [[2, "probably.pgcl.ast.WhileInstr.body"]], "body (probably.pgcl.wp.loopexpectationtransformer attribute)": [[2, "probably.pgcl.wp.LoopExpectationTransformer.body"]], "bounds (probably.pgcl.ast.nattype attribute)": [[2, "probably.pgcl.ast.NatType.bounds"]], "branch() (probably.pgcl.cfg.terminator static method)": [[2, "probably.pgcl.cfg.Terminator.branch"]], "cast() (probably.pgcl.ast.exprclass method)": [[2, "probably.pgcl.ast.ExprClass.cast"]], "cast() (probably.pgcl.ast.instrclass method)": [[2, "probably.pgcl.ast.InstrClass.cast"]], "check_expectation() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.check_expectation"]], "check_expression() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.check_expression"]], "check_instr() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.check_instr"]], "check_is_linear_expr() (in module probably.pgcl.syntax)": [[2, "probably.pgcl.syntax.check_is_linear_expr"]], "check_is_linear_program() (in module probably.pgcl.syntax)": [[2, "probably.pgcl.syntax.check_is_linear_program"]], "check_is_one_big_loop() (in module probably.pgcl.syntax)": [[2, "probably.pgcl.syntax.check_is_one_big_loop"]], "check_program() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.check_program"]], "choice() (probably.pgcl.cfg.terminator static method)": [[2, "probably.pgcl.cfg.Terminator.choice"]], "compile_expectation() (in module probably.pgcl.compiler)": [[2, "probably.pgcl.compiler.compile_expectation"]], "compile_expr() (in module probably.pgcl.compiler)": [[2, "probably.pgcl.compiler.compile_expr"]], "compile_pgcl() (in module probably.pgcl.compiler)": [[2, "probably.pgcl.compiler.compile_pgcl"]], "cond (probably.pgcl.ast.ifinstr attribute)": [[2, "probably.pgcl.ast.IfInstr.cond"]], "cond (probably.pgcl.ast.observeinstr attribute)": [[2, "probably.pgcl.ast.ObserveInstr.cond"]], "cond (probably.pgcl.ast.whileinstr attribute)": [[2, "probably.pgcl.ast.WhileInstr.cond"]], "condition (probably.pgcl.cfg.terminator attribute)": [[2, "probably.pgcl.cfg.Terminator.condition"]], "constants (probably.pgcl.ast.program attribute)": [[2, "probably.pgcl.ast.Program.constants"]], "declarations (probably.pgcl.ast.program attribute)": [[2, "probably.pgcl.ast.Program.declarations"]], "distribution() (probably.pgcl.ast.categoricalexpr method)": [[2, "probably.pgcl.ast.CategoricalExpr.distribution"]], "distribution() (probably.pgcl.ast.duniformexpr method)": [[2, "probably.pgcl.ast.DUniformExpr.distribution"]], "done (probably.pgcl.wp.loopexpectationtransformer attribute)": [[2, "probably.pgcl.wp.LoopExpectationTransformer.done"]], "end (probably.pgcl.ast.cuniformexpr attribute)": [[2, "probably.pgcl.ast.CUniformExpr.end"]], "end (probably.pgcl.ast.duniformexpr attribute)": [[2, "probably.pgcl.ast.DUniformExpr.end"]], "entry_id (probably.pgcl.cfg.controlflowgraph attribute)": [[2, "probably.pgcl.cfg.ControlFlowGraph.entry_id"]], "entry_id (probably.pgcl.cfg.jumptable attribute)": [[2, "probably.pgcl.cfg.JumpTable.entry_id"]], "error_id (probably.pgcl.cfg.jumptable attribute)": [[2, "probably.pgcl.cfg.JumpTable.error_id"]], "expectation (probably.pgcl.wp.expectationtransformer attribute)": [[2, "probably.pgcl.wp.ExpectationTransformer.expectation"]], "expected_numeric_got() (probably.pgcl.check.checkfail static method)": [[2, "probably.pgcl.check.CheckFail.expected_numeric_got"]], "expected_type_got() (probably.pgcl.check.checkfail static method)": [[2, "probably.pgcl.check.CheckFail.expected_type_got"]], "expr (probably.pgcl.ast.expectationinstr attribute)": [[2, "probably.pgcl.ast.ExpectationInstr.expr"]], "expr (probably.pgcl.ast.optimizationquery attribute)": [[2, "probably.pgcl.ast.OptimizationQuery.expr"]], "expr (probably.pgcl.ast.probabilityqueryinstr attribute)": [[2, "probably.pgcl.ast.ProbabilityQueryInstr.expr"]], "expr (probably.pgcl.ast.substexpr attribute)": [[2, "probably.pgcl.ast.SubstExpr.expr"]], "expr (probably.pgcl.ast.tickexpr attribute)": [[2, "probably.pgcl.ast.TickExpr.expr"]], "expr (probably.pgcl.ast.tickinstr attribute)": [[2, "probably.pgcl.ast.TickInstr.expr"]], "expr (probably.pgcl.ast.unopexpr attribute)": [[2, "probably.pgcl.ast.UnopExpr.expr"]], "exprs (probably.pgcl.ast.categoricalexpr attribute)": [[2, "probably.pgcl.ast.CategoricalExpr.exprs"]], "false (probably.pgcl.ast.ifinstr attribute)": [[2, "probably.pgcl.ast.IfInstr.false"]], "finalize() (probably.pgcl.cfg.jumptable method)": [[2, "probably.pgcl.cfg.JumpTable.finalize"]], "flatten() (probably.pgcl.ast.binopexpr method)": [[2, "probably.pgcl.ast.BinopExpr.flatten"]], "flip() (probably.pgcl.cfg.terminator method)": [[2, "probably.pgcl.cfg.Terminator.flip"]], "fmap() (probably.pgcl.check.checkfail static method)": [[2, "probably.pgcl.check.CheckFail.fmap"]], "fresh_block() (probably.pgcl.cfg.controlflowgraph method)": [[2, "probably.pgcl.cfg.ControlFlowGraph.fresh_block"]], "from_instructions() (probably.pgcl.cfg.controlflowgraph static method)": [[2, "probably.pgcl.cfg.ControlFlowGraph.from_instructions"]], "from_iverson() (probably.pgcl.simplify.snfexpectationtransformer static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer.from_iverson"]], "from_iverson() (probably.pgcl.simplify.snfexpectationtransformerproduct static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.from_iverson"]], "from_parse() (probably.pgcl.ast.program static method)": [[2, "probably.pgcl.ast.Program.from_parse"]], "from_prob() (probably.pgcl.simplify.snfexpectationtransformer static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer.from_prob"]], "from_prob() (probably.pgcl.simplify.snfexpectationtransformerproduct static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.from_prob"]], "from_subst() (probably.pgcl.simplify.snfexpectationtransformer static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer.from_subst"]], "from_subst() (probably.pgcl.simplify.snfexpectationtransformerproduct static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.from_subst"]], "from_ticks() (probably.pgcl.simplify.snfexpectationtransformer static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer.from_ticks"]], "from_ticks() (probably.pgcl.simplify.snfexpectationtransformerproduct static method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.from_ticks"]], "general_wp_transformer() (in module probably.pgcl.wp)": [[2, "probably.pgcl.wp.general_wp_transformer"]], "get_type() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.get_type"]], "goto() (probably.pgcl.cfg.terminator static method)": [[2, "probably.pgcl.cfg.Terminator.goto"]], "guard (probably.pgcl.simplify.snfexpectationtransformerproduct attribute)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.guard"]], "ident (probably.pgcl.cfg.basicblock attribute)": [[2, "probably.pgcl.cfg.BasicBlock.ident"]], "if_false (probably.pgcl.cfg.terminator attribute)": [[2, "probably.pgcl.cfg.Terminator.if_false"]], "if_true (probably.pgcl.cfg.terminator attribute)": [[2, "probably.pgcl.cfg.Terminator.if_true"]], "infinity() (probably.pgcl.ast.reallitexpr static method)": [[2, "probably.pgcl.ast.RealLitExpr.infinity"]], "init (probably.pgcl.wp.loopexpectationtransformer attribute)": [[2, "probably.pgcl.wp.LoopExpectationTransformer.init"]], "instructions (probably.pgcl.ast.program attribute)": [[2, "probably.pgcl.ast.Program.instructions"]], "is_associative() (probably.pgcl.ast.binop method)": [[2, "probably.pgcl.ast.Binop.is_associative"]], "is_compatible() (in module probably.pgcl.check)": [[2, "probably.pgcl.check.is_compatible"]], "is_goto() (probably.pgcl.cfg.terminator method)": [[2, "probably.pgcl.cfg.Terminator.is_goto"]], "is_infinite() (probably.pgcl.ast.reallitexpr method)": [[2, "probably.pgcl.ast.RealLitExpr.is_infinite"]], "is_trap() (probably.pgcl.cfg.basicblock method)": [[2, "probably.pgcl.cfg.BasicBlock.is_trap"]], "is_zero() (probably.pgcl.ast.tickexpr method)": [[2, "probably.pgcl.ast.TickExpr.is_zero"]], "iterations (probably.pgcl.ast.loopinstr attribute)": [[2, "probably.pgcl.ast.LoopInstr.iterations"]], "kind (probably.pgcl.cfg.terminator attribute)": [[2, "probably.pgcl.cfg.Terminator.kind"]], "lhs (probably.pgcl.ast.asgninstr attribute)": [[2, "probably.pgcl.ast.AsgnInstr.lhs"]], "lhs (probably.pgcl.ast.binopexpr attribute)": [[2, "probably.pgcl.ast.BinopExpr.lhs"]], "lhs (probably.pgcl.ast.choiceinstr attribute)": [[2, "probably.pgcl.ast.ChoiceInstr.lhs"]], "location (probably.pgcl.check.checkfail attribute)": [[2, "probably.pgcl.check.CheckFail.location"]], "loopfree_wp() (in module probably.pgcl.wp)": [[2, "probably.pgcl.wp.loopfree_wp"]], "loopfree_wp_transformer() (in module probably.pgcl.wp)": [[2, "probably.pgcl.wp.loopfree_wp_transformer"]], "lower (probably.pgcl.ast.bounds attribute)": [[2, "probably.pgcl.ast.Bounds.lower"]], "message (probably.pgcl.check.checkfail attribute)": [[2, "probably.pgcl.check.CheckFail.message"]], "n (probably.pgcl.ast.binomialexpr attribute)": [[2, "probably.pgcl.ast.BinomialExpr.n"]], "normalize_expectation() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.normalize_expectation"]], "normalize_expectation_transformer() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.normalize_expectation_transformer"]], "one_big_loop() (in module probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.one_big_loop"]], "one_loop_wp_transformer() (in module probably.pgcl.wp)": [[2, "probably.pgcl.wp.one_loop_wp_transformer"]], "operator (probably.pgcl.ast.binopexpr attribute)": [[2, "probably.pgcl.ast.BinopExpr.operator"]], "operator (probably.pgcl.ast.unopexpr attribute)": [[2, "probably.pgcl.ast.UnopExpr.operator"]], "p (probably.pgcl.ast.binomialexpr attribute)": [[2, "probably.pgcl.ast.BinomialExpr.p"]], "param (probably.pgcl.ast.bernoulliexpr attribute)": [[2, "probably.pgcl.ast.BernoulliExpr.param"]], "param (probably.pgcl.ast.geometricexpr attribute)": [[2, "probably.pgcl.ast.GeometricExpr.param"]], "param (probably.pgcl.ast.logdistexpr attribute)": [[2, "probably.pgcl.ast.LogDistExpr.param"]], "param (probably.pgcl.ast.poissonexpr attribute)": [[2, "probably.pgcl.ast.PoissonExpr.param"]], "parameter (probably.pgcl.ast.optimizationquery attribute)": [[2, "probably.pgcl.ast.OptimizationQuery.parameter"]], "parameters (probably.pgcl.ast.program attribute)": [[2, "probably.pgcl.ast.Program.parameters"]], "parse_expectation() (in module probably.pgcl.parser)": [[2, "probably.pgcl.parser.parse_expectation"]], "parse_expr() (in module probably.pgcl.parser)": [[2, "probably.pgcl.parser.parse_expr"]], "parse_pgcl() (in module probably.pgcl.parser)": [[2, "probably.pgcl.parser.parse_pgcl"]], "prob (probably.pgcl.ast.choiceinstr attribute)": [[2, "probably.pgcl.ast.ChoiceInstr.prob"]], "prob (probably.pgcl.ast.plotinstr attribute)": [[2, "probably.pgcl.ast.PlotInstr.prob"]], "prob (probably.pgcl.simplify.snfexpectationtransformerproduct attribute)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.prob"]], "probably.pgcl": [[2, "module-probably.pgcl"]], "probably.pgcl.ast": [[2, "module-probably.pgcl.ast"]], "probably.pgcl.cfg": [[2, "module-probably.pgcl.cfg"]], "probably.pgcl.check": [[2, "module-probably.pgcl.check"]], "probably.pgcl.compiler": [[2, "module-probably.pgcl.compiler"]], "probably.pgcl.parser": [[2, "module-probably.pgcl.parser"]], "probably.pgcl.simplify": [[2, "module-probably.pgcl.simplify"]], "probably.pgcl.substitute": [[2, "module-probably.pgcl.substitute"]], "probably.pgcl.syntax": [[2, "module-probably.pgcl.syntax"]], "probably.pgcl.walk": [[2, "module-probably.pgcl.walk"]], "probably.pgcl.wp": [[2, "module-probably.pgcl.wp"]], "program_one_big_loop() (in module probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.program_one_big_loop"]], "reduce() (probably.pgcl.ast.binopexpr static method)": [[2, "probably.pgcl.ast.BinopExpr.reduce"]], "reduce_cfg_to_instrs() (in module probably.pgcl.cfg)": [[2, "probably.pgcl.cfg.reduce_cfg_to_instrs"]], "render_dot() (probably.pgcl.cfg.controlflowgraph method)": [[2, "probably.pgcl.cfg.ControlFlowGraph.render_dot"]], "rhs (probably.pgcl.ast.asgninstr attribute)": [[2, "probably.pgcl.ast.AsgnInstr.rhs"]], "rhs (probably.pgcl.ast.binopexpr attribute)": [[2, "probably.pgcl.ast.BinopExpr.rhs"]], "rhs (probably.pgcl.ast.choiceinstr attribute)": [[2, "probably.pgcl.ast.ChoiceInstr.rhs"]], "sampling_dist (probably.pgcl.ast.iidsampleexpr attribute)": [[2, "probably.pgcl.ast.IidSampleExpr.sampling_dist"]], "simplifying_and() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.simplifying_and"]], "simplifying_neg() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.simplifying_neg"]], "simplifying_plus() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.simplifying_plus"]], "simplifying_subst() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.simplifying_subst"]], "simplifying_times() (in module probably.pgcl.simplify)": [[2, "probably.pgcl.simplify.simplifying_times"]], "start (probably.pgcl.ast.cuniformexpr attribute)": [[2, "probably.pgcl.ast.CUniformExpr.start"]], "start (probably.pgcl.ast.duniformexpr attribute)": [[2, "probably.pgcl.ast.DUniformExpr.start"]], "subst (probably.pgcl.ast.substexpr attribute)": [[2, "probably.pgcl.ast.SubstExpr.subst"]], "subst (probably.pgcl.simplify.snfexpectationtransformerproduct attribute)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.subst"]], "substitute() (probably.pgcl.cfg.controlflowgraph method)": [[2, "probably.pgcl.cfg.ControlFlowGraph.substitute"]], "substitute() (probably.pgcl.cfg.terminator method)": [[2, "probably.pgcl.cfg.Terminator.substitute"]], "substitute() (probably.pgcl.simplify.snfexpectationtransformer method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformer.substitute"]], "substitute() (probably.pgcl.simplify.snfexpectationtransformerproduct method)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.substitute"]], "substitute() (probably.pgcl.wp.expectationtransformer method)": [[2, "probably.pgcl.wp.ExpectationTransformer.substitute"]], "substitute_constants() (in module probably.pgcl.substitute)": [[2, "probably.pgcl.substitute.substitute_constants"]], "substitute_constants_expr() (in module probably.pgcl.substitute)": [[2, "probably.pgcl.substitute.substitute_constants_expr"]], "substitute_expr() (in module probably.pgcl.substitute)": [[2, "probably.pgcl.substitute.substitute_expr"]], "successors (probably.pgcl.cfg.terminator property)": [[2, "probably.pgcl.cfg.Terminator.successors"]], "term_count (probably.pgcl.ast.plotinstr attribute)": [[2, "probably.pgcl.ast.PlotInstr.term_count"]], "terminator (probably.pgcl.cfg.basicblock attribute)": [[2, "probably.pgcl.cfg.BasicBlock.terminator"]], "ticks (probably.pgcl.simplify.snfexpectationtransformerproduct attribute)": [[2, "probably.pgcl.simplify.SnfExpectationTransformerProduct.ticks"]], "to_fraction() (probably.pgcl.ast.reallitexpr method)": [[2, "probably.pgcl.ast.RealLitExpr.to_fraction"]], "to_networkx() (probably.pgcl.cfg.controlflowgraph method)": [[2, "probably.pgcl.cfg.ControlFlowGraph.to_networkx"]], "to_skeleton() (probably.pgcl.ast.program method)": [[2, "probably.pgcl.ast.Program.to_skeleton"]], "trampoline() (probably.pgcl.cfg.jumptable method)": [[2, "probably.pgcl.cfg.JumpTable.trampoline"]], "true (probably.pgcl.ast.ifinstr attribute)": [[2, "probably.pgcl.ast.IfInstr.true"]], "typ (probably.pgcl.ast.parameterdecl attribute)": [[2, "probably.pgcl.ast.ParameterDecl.typ"]], "typ (probably.pgcl.ast.vardecl attribute)": [[2, "probably.pgcl.ast.VarDecl.typ"]], "typ (probably.pgcl.cfg.basicblock attribute)": [[2, "probably.pgcl.cfg.BasicBlock.typ"]], "type (probably.pgcl.ast.optimizationquery attribute)": [[2, "probably.pgcl.ast.OptimizationQuery.type"]], "upper (probably.pgcl.ast.bounds attribute)": [[2, "probably.pgcl.ast.Bounds.upper"]], "value (probably.pgcl.ast.boollitexpr attribute)": [[2, "probably.pgcl.ast.BoolLitExpr.value"]], "value (probably.pgcl.ast.constdecl attribute)": [[2, "probably.pgcl.ast.ConstDecl.value"]], "value (probably.pgcl.ast.natlitexpr attribute)": [[2, "probably.pgcl.ast.NatLitExpr.value"]], "value (probably.pgcl.ast.reallitexpr attribute)": [[2, "probably.pgcl.ast.RealLitExpr.value"]], "var (probably.pgcl.ast.constdecl attribute)": [[2, "probably.pgcl.ast.ConstDecl.var"]], "var (probably.pgcl.ast.parameterdecl attribute)": [[2, "probably.pgcl.ast.ParameterDecl.var"]], "var (probably.pgcl.ast.vardecl attribute)": [[2, "probably.pgcl.ast.VarDecl.var"]], "var (probably.pgcl.ast.varexpr attribute)": [[2, "probably.pgcl.ast.VarExpr.var"]], "var_1 (probably.pgcl.ast.plotinstr attribute)": [[2, "probably.pgcl.ast.PlotInstr.var_1"]], "var_2 (probably.pgcl.ast.plotinstr attribute)": [[2, "probably.pgcl.ast.PlotInstr.var_2"]], "variable (probably.pgcl.ast.iidsampleexpr attribute)": [[2, "probably.pgcl.ast.IidSampleExpr.variable"]], "variable (probably.pgcl.wp.expectationtransformer attribute)": [[2, "probably.pgcl.wp.ExpectationTransformer.variable"]], "variables (probably.pgcl.ast.program attribute)": [[2, "probably.pgcl.ast.Program.variables"]], "_doc_parser_grammar() (in module probably.pgcl.parser)": [[3, "probably.pgcl.parser._doc_parser_grammar"]], "translationcontext (class in probably.pysmt.context)": [[4, "probably.pysmt.context.TranslationContext"]], "expr_to_pysmt() (in module probably.pysmt.expr)": [[4, "probably.pysmt.expr.expr_to_pysmt"]], "from_program() (probably.pysmt.context.translationcontext static method)": [[4, "probably.pysmt.context.TranslationContext.from_program"]], "id_subst (probably.pysmt.context.translationcontext attribute)": [[4, "probably.pysmt.context.TranslationContext.id_subst"]], "infinity (probably.pysmt.context.translationcontext attribute)": [[4, "probably.pysmt.context.TranslationContext.infinity"]], "probably.pysmt": [[4, "module-probably.pysmt"]], "probably.pysmt.context": [[4, "module-probably.pysmt.context"]], "probably.pysmt.expr": [[4, "module-probably.pysmt.expr"]], "variables (probably.pysmt.context.translationcontext attribute)": [[4, "probably.pysmt.context.TranslationContext.variables"]], "_binder (class in probably.pgcl.substitute)": [[5, "probably.pgcl.substitute._Binder"]], "_subst (class in probably.pgcl.substitute)": [[5, "probably.pgcl.substitute._Subst"]], "_bind_substs() (in module probably.pgcl.substitute)": [[5, "probably.pgcl.substitute._bind_substs"]], "add_bound() (probably.pgcl.substitute._subst method)": [[5, "probably.pgcl.substitute._Subst.add_bound"]], "apply() (probably.pgcl.substitute._subst method)": [[5, "probably.pgcl.substitute._Subst.apply"]], "bind() (probably.pgcl.substitute._binder method)": [[5, "probably.pgcl.substitute._Binder.bind"]], "copy() (probably.pgcl.substitute._subst method)": [[5, "probably.pgcl.substitute._Subst.copy"]], "lookup() (probably.pgcl.substitute._binder method)": [[5, "probably.pgcl.substitute._Binder.lookup"]], "resolve() (probably.pgcl.substitute._binder method)": [[5, "probably.pgcl.substitute._Binder.resolve"]], "assoc (class in probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.Assoc"]], "left (probably.util.lark_expr_parser.assoc attribute)": [[6, "probably.util.lark_expr_parser.Assoc.LEFT"]], "mut (class in probably.util.ref)": [[6, "probably.util.ref.Mut"]], "operatortable (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.OperatorTable"]], "right (probably.util.lark_expr_parser.assoc attribute)": [[6, "probably.util.lark_expr_parser.Assoc.RIGHT"]], "ref (in module probably.util.ref)": [[6, "probably.util.ref.Ref"]], "alloc() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.alloc"]], "atom() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.atom"]], "build_expr_parser() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.build_expr_parser"]], "dedup_list() (in module probably.util)": [[6, "probably.util.dedup_list"]], "dict_items() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.dict_items"]], "dict_values() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.dict_values"]], "infixl() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.infixl"]], "infixr() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.infixr"]], "iterate() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.iterate"]], "list() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.list"]], "postfix() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.postfix"]], "prefix() (in module probably.util.lark_expr_parser)": [[6, "probably.util.lark_expr_parser.prefix"]], "probably.util": [[6, "module-probably.util"]], "probably.util.lark_expr_parser": [[6, "module-probably.util.lark_expr_parser"]], "probably.util.ref": [[6, "module-probably.util.ref"]], "read (probably.util.ref.mut attribute)": [[6, "probably.util.ref.Mut.read"]], "val (probably.util.ref.mut property)": [[6, "probably.util.ref.Mut.val"]], "wrap() (probably.util.ref.mut static method)": [[6, "probably.util.ref.Mut.wrap"]], "write (probably.util.ref.mut attribute)": [[6, "probably.util.ref.Mut.write"]]}})
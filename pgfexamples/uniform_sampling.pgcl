# correctness proof in [Lumbroso 2013]

nat running;
nat v;
nat c;
nat lower;
nat higher;


# Issues are that we have to find an invariant for every input distribution.

# initialization:
running := 0
v := 1
n := higher-lower+1
c := 0


while(running = 0){
 v := 2*v;
 {c := 2 * c + 1} [1/2] {c := 2*c};
 if( v >= n){
    if( n > c){
        running := 1;
    } else{
        v := v - n;
        c := c - n;
    }
 } else{
    skip
 }
 if (not (running = 0)){
    c := lower + c;
 } else {
    skip
 }
}